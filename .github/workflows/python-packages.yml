name: Build & publish Python packages

on:
  # ①  Every commit that lands in the repository
  push:                    # or restrict with  branches: [main]  if you prefer
  # ②  GitHub Release → PyPI (unchanged)
  release:
    types: [published]
  # ③  Manual trigger from the Actions tab (unchanged)
  workflow_dispatch:

jobs:
  wheel:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5          # v5 is the current tag
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install build tools
      run: |
        python -m pip install --upgrade pip
        python -m pip install build twine

    # ----------------------------------------------------------
    # Build artefacts
    # ----------------------------------------------------------
    - name: Build wheel (and one sdist)
      run: |
        python -m build --wheel .
        # build the source tarball only once (on Ubuntu 3.12) to avoid duplicates
        if [ "${{ matrix.os }}${{ matrix.python-version }}" = "ubuntu-latest3.12" ]; then
          python -m build --sdist .
        fi

    # ----------------------------------------------------------
    # Upload logic
    # ----------------------------------------------------------
    - name: Publish to PyPI      # only on Release → PyPI
      if: github.event_name == 'release'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: python -m twine upload --non-interactive --skip-existing dist/*
